/**
 * This file is generated by the Angular 2 template compiler.
 * Do not edit.
 */
/* tslint:disable */
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
import * as import0 from './logout.component';
import * as import1 from '@angular/core/src/linker/view';
import * as import3 from '@angular/core/src/linker/element';
import * as import4 from '../providers/user/user.service';
import * as import7 from '@angular/core/src/linker/view_type';
import * as import8 from '@angular/core/src/change_detection/change_detection';
import * as import9 from '@angular/core/src/metadata/view';
import * as import10 from '@angular/core/src/linker/component_factory';
import * as import11 from '../node_modules/ionic-angular/components/button/button.ngfactory';
import * as import12 from 'ionic-angular/config/config';
import * as import13 from '@angular/core/src/linker/element_ref';
import * as import14 from 'ionic-angular/components/button/button';
export var Wrapper_LogoutComponent = (function () {
    function Wrapper_LogoutComponent(p0) {
        this.changed = false;
        this.context = new import0.LogoutComponent(p0);
    }
    Wrapper_LogoutComponent.prototype.detectChangesInternal = function (view, el, throwOnChange) {
        var changed = this.changed;
        this.changed = false;
        return changed;
    };
    return Wrapper_LogoutComponent;
}());
var renderType_LogoutComponent_Host = null;
var _View_LogoutComponent_Host0 = (function (_super) {
    __extends(_View_LogoutComponent_Host0, _super);
    function _View_LogoutComponent_Host0(viewUtils, parentInjector, declarationEl) {
        _super.call(this, _View_LogoutComponent_Host0, renderType_LogoutComponent_Host, import7.ViewType.HOST, viewUtils, parentInjector, declarationEl, import8.ChangeDetectorStatus.CheckAlways);
    }
    _View_LogoutComponent_Host0.prototype.createInternal = function (rootSelector) {
        this._el_0 = this.selectOrCreateHostElement('logout', rootSelector, null);
        this._appEl_0 = new import3.AppElement(0, null, this, this._el_0);
        var compView_0 = viewFactory_LogoutComponent0(this.viewUtils, this.injector(0), this._appEl_0);
        this._UserService_0_4 = new import4.UserService();
        this._LogoutComponent_0_5 = new Wrapper_LogoutComponent(this._UserService_0_4);
        this._appEl_0.initComponent(this._LogoutComponent_0_5.context, [], compView_0);
        compView_0.create(this._LogoutComponent_0_5.context, this.projectableNodes, null);
        this.init([].concat([this._el_0]), [this._el_0], [], []);
        return this._appEl_0;
    };
    _View_LogoutComponent_Host0.prototype.injectorGetInternal = function (token, requestNodeIndex, notFoundResult) {
        if (((token === import4.UserService) && (0 === requestNodeIndex))) {
            return this._UserService_0_4;
        }
        if (((token === import0.LogoutComponent) && (0 === requestNodeIndex))) {
            return this._LogoutComponent_0_5.context;
        }
        return notFoundResult;
    };
    _View_LogoutComponent_Host0.prototype.detectChangesInternal = function (throwOnChange) {
        this._LogoutComponent_0_5.detectChangesInternal(this, this._el_0, throwOnChange);
        this.detectContentChildrenChanges(throwOnChange);
        this.detectViewChildrenChanges(throwOnChange);
    };
    return _View_LogoutComponent_Host0;
}(import1.AppView));
function viewFactory_LogoutComponent_Host0(viewUtils, parentInjector, declarationEl) {
    if ((renderType_LogoutComponent_Host === null)) {
        (renderType_LogoutComponent_Host = viewUtils.createRenderComponentType('', 0, import9.ViewEncapsulation.None, [], {}));
    }
    return new _View_LogoutComponent_Host0(viewUtils, parentInjector, declarationEl);
}
export var LogoutComponentNgFactory = new import10.ComponentFactory('logout', viewFactory_LogoutComponent_Host0, import0.LogoutComponent);
var styles_LogoutComponent = [];
var renderType_LogoutComponent = null;
var _View_LogoutComponent0 = (function (_super) {
    __extends(_View_LogoutComponent0, _super);
    function _View_LogoutComponent0(viewUtils, parentInjector, declarationEl) {
        _super.call(this, _View_LogoutComponent0, renderType_LogoutComponent, import7.ViewType.COMPONENT, viewUtils, parentInjector, declarationEl, import8.ChangeDetectorStatus.CheckAlways);
    }
    _View_LogoutComponent0.prototype.createInternal = function (rootSelector) {
        var parentRenderNode = this.renderer.createViewRoot(this.declarationAppElement.nativeElement);
        this._el_0 = this.renderer.createElement(parentRenderNode, 'button', null);
        this.renderer.setElementAttribute(this._el_0, 'ion-button', '');
        this._appEl_0 = new import3.AppElement(0, null, this, this._el_0);
        var compView_0 = import11.viewFactory_Button0(this.viewUtils, this.injector(0), this._appEl_0);
        this._Button_0_4 = new import11.Wrapper_Button(null, '', this.parentInjector.get(import12.Config), new import13.ElementRef(this._el_0), this.renderer);
        this._appEl_0.initComponent(this._Button_0_4.context, [], compView_0);
        this._text_1 = this.renderer.createText(null, 'Logout', null);
        compView_0.create(this._Button_0_4.context, [[].concat([this._text_1])], null);
        var disposable_0 = this.renderer.listen(this._el_0, 'click', this.eventHandler(this._handle_click_0_0.bind(this)));
        this.init([], [
            this._el_0,
            this._text_1
        ], [disposable_0], []);
        return null;
    };
    _View_LogoutComponent0.prototype.injectorGetInternal = function (token, requestNodeIndex, notFoundResult) {
        if (((token === import14.Button) && ((0 <= requestNodeIndex) && (requestNodeIndex <= 1)))) {
            return this._Button_0_4.context;
        }
        return notFoundResult;
    };
    _View_LogoutComponent0.prototype.detectChangesInternal = function (throwOnChange) {
        if (this._Button_0_4.detectChangesInternal(this, this._el_0, throwOnChange)) {
            this._appEl_0.componentView.markAsCheckOnce();
        }
        this.detectContentChildrenChanges(throwOnChange);
        if (!throwOnChange) {
            if ((this.numberOfChecks === 0)) {
                this._Button_0_4.context.ngAfterContentInit();
            }
        }
        this.detectViewChildrenChanges(throwOnChange);
    };
    _View_LogoutComponent0.prototype._handle_click_0_0 = function ($event) {
        this.markPathToRootAsCheckOnce();
        var pd_0 = (this.context.logout() !== false);
        return (true && pd_0);
    };
    return _View_LogoutComponent0;
}(import1.AppView));
export function viewFactory_LogoutComponent0(viewUtils, parentInjector, declarationEl) {
    if ((renderType_LogoutComponent === null)) {
        (renderType_LogoutComponent = viewUtils.createRenderComponentType('', 0, import9.ViewEncapsulation.None, styles_LogoutComponent, {}));
    }
    return new _View_LogoutComponent0(viewUtils, parentInjector, declarationEl);
}
//# sourceMappingURL=logout.component.ngfactory.js.map