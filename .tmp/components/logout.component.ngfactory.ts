/**
 * This file is generated by the Angular 2 template compiler.
 * Do not edit.
 */
 /* tslint:disable */

import * as import0 from './logout.component';
import * as import1 from '@angular/core/src/linker/view';
import * as import2 from '@angular/core/src/render/api';
import * as import3 from '@angular/core/src/linker/element';
import * as import4 from '../providers/user/user.service';
import * as import5 from '@angular/core/src/linker/view_utils';
import * as import6 from '@angular/core/src/di/injector';
import * as import7 from '@angular/core/src/linker/view_type';
import * as import8 from '@angular/core/src/change_detection/change_detection';
import * as import9 from '@angular/core/src/metadata/view';
import * as import10 from '@angular/core/src/linker/component_factory';
import * as import11 from '../node_modules/ionic-angular/components/button/button.ngfactory';
import * as import12 from 'ionic-angular/config/config';
import * as import13 from '@angular/core/src/linker/element_ref';
import * as import14 from 'ionic-angular/components/button/button';
export class Wrapper_LogoutComponent {
  context:import0.LogoutComponent;
  changed:boolean;
  constructor(p0:any) {
    this.changed = false;
    this.context = new import0.LogoutComponent(p0);
  }
  detectChangesInternal(view:import1.AppView<any>,el:any,throwOnChange:boolean):boolean {
    var changed:any = this.changed;
    this.changed = false;
    return changed;
  }
}
var renderType_LogoutComponent_Host:import2.RenderComponentType = (null as any);
class _View_LogoutComponent_Host0 extends import1.AppView<any> {
  _el_0:any;
  /*private*/ _appEl_0:import3.AppElement;
  _UserService_0_4:import4.UserService;
  _LogoutComponent_0_5:Wrapper_LogoutComponent;
  constructor(viewUtils:import5.ViewUtils,parentInjector:import6.Injector,declarationEl:import3.AppElement) {
    super(_View_LogoutComponent_Host0,renderType_LogoutComponent_Host,import7.ViewType.HOST,viewUtils,parentInjector,declarationEl,import8.ChangeDetectorStatus.CheckAlways);
  }
  createInternal(rootSelector:string):import3.AppElement {
    this._el_0 = this.selectOrCreateHostElement('logout',rootSelector,(null as any));
    this._appEl_0 = new import3.AppElement(0,(null as any),this,this._el_0);
    var compView_0:any = viewFactory_LogoutComponent0(this.viewUtils,this.injector(0),this._appEl_0);
    this._UserService_0_4 = new import4.UserService();
    this._LogoutComponent_0_5 = new Wrapper_LogoutComponent(this._UserService_0_4);
    this._appEl_0.initComponent(this._LogoutComponent_0_5.context,([] as any[]),compView_0);
    compView_0.create(this._LogoutComponent_0_5.context,this.projectableNodes,(null as any));
    this.init(([] as any[]).concat([this._el_0]),[this._el_0],([] as any[]),([] as any[]));
    return this._appEl_0;
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import4.UserService) && (0 === requestNodeIndex))) { return this._UserService_0_4; }
    if (((token === import0.LogoutComponent) && (0 === requestNodeIndex))) { return this._LogoutComponent_0_5.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    this._LogoutComponent_0_5.detectChangesInternal(this,this._el_0,throwOnChange);
    this.detectContentChildrenChanges(throwOnChange);
    this.detectViewChildrenChanges(throwOnChange);
  }
}
function viewFactory_LogoutComponent_Host0(viewUtils:import5.ViewUtils,parentInjector:import6.Injector,declarationEl:import3.AppElement):import1.AppView<any> {
  if ((renderType_LogoutComponent_Host === (null as any))) { (renderType_LogoutComponent_Host = viewUtils.createRenderComponentType('',0,import9.ViewEncapsulation.None,([] as any[]),{})); }
  return new _View_LogoutComponent_Host0(viewUtils,parentInjector,declarationEl);
}
export const LogoutComponentNgFactory:import10.ComponentFactory<import0.LogoutComponent> = new import10.ComponentFactory<import0.LogoutComponent>('logout',viewFactory_LogoutComponent_Host0,import0.LogoutComponent);
const styles_LogoutComponent:any[] = ([] as any[]);
var renderType_LogoutComponent:import2.RenderComponentType = (null as any);
class _View_LogoutComponent0 extends import1.AppView<import0.LogoutComponent> {
  _el_0:any;
  /*private*/ _appEl_0:import3.AppElement;
  _Button_0_4:import11.Wrapper_Button;
  _text_1:any;
  constructor(viewUtils:import5.ViewUtils,parentInjector:import6.Injector,declarationEl:import3.AppElement) {
    super(_View_LogoutComponent0,renderType_LogoutComponent,import7.ViewType.COMPONENT,viewUtils,parentInjector,declarationEl,import8.ChangeDetectorStatus.CheckAlways);
  }
  createInternal(rootSelector:string):import3.AppElement {
    const parentRenderNode:any = this.renderer.createViewRoot(this.declarationAppElement.nativeElement);
    this._el_0 = this.renderer.createElement(parentRenderNode,'button',(null as any));
    this.renderer.setElementAttribute(this._el_0,'ion-button','');
    this._appEl_0 = new import3.AppElement(0,(null as any),this,this._el_0);
    var compView_0:any = import11.viewFactory_Button0(this.viewUtils,this.injector(0),this._appEl_0);
    this._Button_0_4 = new import11.Wrapper_Button((null as any),'',this.parentInjector.get(import12.Config),new import13.ElementRef(this._el_0),this.renderer);
    this._appEl_0.initComponent(this._Button_0_4.context,([] as any[]),compView_0);
    this._text_1 = this.renderer.createText((null as any),'Logout',(null as any));
    compView_0.create(this._Button_0_4.context,[([] as any[]).concat([this._text_1])],(null as any));
    var disposable_0:Function = this.renderer.listen(this._el_0,'click',this.eventHandler(this._handle_click_0_0.bind(this)));
    this.init(([] as any[]),[
      this._el_0,
      this._text_1
    ]
    ,[disposable_0],([] as any[]));
    return (null as any);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import14.Button) && ((0 <= requestNodeIndex) && (requestNodeIndex <= 1)))) { return this._Button_0_4.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    if (this._Button_0_4.detectChangesInternal(this,this._el_0,throwOnChange)) { this._appEl_0.componentView.markAsCheckOnce(); }
    this.detectContentChildrenChanges(throwOnChange);
    if (!throwOnChange) { if ((this.numberOfChecks === 0)) { this._Button_0_4.context.ngAfterContentInit(); } }
    this.detectViewChildrenChanges(throwOnChange);
  }
  private _handle_click_0_0($event:any):boolean {
    this.markPathToRootAsCheckOnce();
    const pd_0:any = ((<any>this.context.logout()) !== false);
    return (true && pd_0);
  }
}
export function viewFactory_LogoutComponent0(viewUtils:import5.ViewUtils,parentInjector:import6.Injector,declarationEl:import3.AppElement):import1.AppView<import0.LogoutComponent> {
  if ((renderType_LogoutComponent === (null as any))) { (renderType_LogoutComponent = viewUtils.createRenderComponentType('',0,import9.ViewEncapsulation.None,styles_LogoutComponent,{})); }
  return new _View_LogoutComponent0(viewUtils,parentInjector,declarationEl);
}